var buttonColours = ["red", "blue", "green", "yellow"];

var gamePattern = []; // an empty array to save the outcome random number
var userClickedPattern = []; // the array to save the clicked pattern compared with gamePattern 

var started = false;
var level = 0;

$(".btn").on("click",function() { // apply the function when "click" is detected on ".btn"
    var userChosenColour = $(this).attr("id"); // retrive id content of the button click using "this" and save it
    userClickedPattern.push(userChosenColour); // push the id content of every click into an array

    playSound(userChosenColour); // play song for every click
    animatePress(userChosenColour);
    checkAnwser(userClickedPattern.length-1);
});

// step 7 starts the game only once which is when "started" = false
$(document).on("keydown", function() {
    if(!started) {
        $("#level-title").text("Level 0");
        nextSequence();
        started = true;
    }
});
$("#chartreuse").on("click", function() {
    $("#level-title").text("Level 0");
        nextSequence();
        started = true;
});

function nextSequence() { // function for color shown sequence generated by our program
    userClickedPattern = []; // reset the userClickPattern for the next sequence of game

    level++;
    $("#level-title").text("Level " + level);

    var randomNumber = Math.floor(Math.random() * 4);
    var randomChosenColour = buttonColours[randomNumber]; // set the outcome random color
    gamePattern.push(randomChosenColour); // push the generated random number to the end of the empty array 

    $("#" + randomChosenColour).fadeOut(100).fadeIn(100).fadeOut(100).fadeIn(100); // add the flash to the corresping color
    playSound(randomChosenColour); // play song for the color generated by our program 
}

function playSound(name) {
    var audio = new Audio("sounds/" + name + ".mp3"); // play the related songs for the random outcome color
    audio.play();
}

//step 6 add animation to user clicks and remove it after 100 milliseconds
function animatePress(currentColour){
    $("." + currentColour).addClass("pressed");
    setTimeout(function() {
        $("." + currentColour).removeClass("pressed");
    }, 100);
}

// step 8 check user's anwser against game sequence
function checkAnwser(currentLevel) {
    if(userClickedPattern[currentLevel] === gamePattern[currentLevel]) {
        if(currentLevel === gamePattern.length - 1){
            setTimeout(function() {
                nextSequence();
            }, 1000);
        } 
    }
    else {
        var audio = new Audio("sounds/wrong.mp3");
        audio.play();
        $("body").addClass("game-over");
        setTimeout(function() {
            $("body").removeClass("game-over");
        }, 200);
        $("#level-title").text("Game Over, Press Any Key to Restart");
        startOver();
    }
}

function startOver() {
    level = 0;
    gamePattern = [];
    started = false;
}
